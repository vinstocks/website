name: Ping Supabase with Auth to Prevent Pausing
on:
  schedule:
    - cron: '0 9 * * *' # Runs everyday
  workflow_dispatch:

jobs:
  ping:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install Supabase Client
        run: npm install @supabase/supabase-js --force
        
      - name: Authenticate with Supabase
        env:
          SUPABASE_URL: https://nybatvzxejhcxzkgymkg.supabase.co
          SUPABASE_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im55YmF0dnp4ZWpoY3h6a2d5bWtnIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTI5MTkyNTEsImV4cCI6MjA2ODQ5NTI1MX0.rFWPZ2lJ52eFLVOzzsOOCc3zbkamg2We_4819pe1Bo0
          TEST_EMAIL: hritikgupta7080@gmail.com
          TEST_PASSWORD: Hritik@7080
        run: |
          node -e "
          (async () => {
            try {
              const { createClient } = require('@supabase/supabase-js');
              const supabase = createClient(process.env.SUPABASE_URL, process.env.SUPABASE_KEY);
              
              // Authenticate with test user
              const { data, error } = await supabase.auth.signInWithPassword({
                email: process.env.TEST_EMAIL,
                password: process.env.TEST_PASSWORD,
              });
              
              if (error) {
                console.log('Auth error:', error.message);
                
                console.log('Fallback query can add');
              } else {
                console.log('Authentication successful:', data.session ? 'Session created' : 'No session');
                
                // Optionally sign out immediately to clean up
                await supabase.auth.signOut();
                console.log('Signed out successfully');
              }
            } catch (err) {
              console.error('Error:', err.message);
              process.exit(1);
            }
          })();
          "